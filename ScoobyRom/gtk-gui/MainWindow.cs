
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	
	private global::Gtk.Action FileAction;
	
	private global::Gtk.Action openAction;
	
	private global::Gtk.Action quitAction;
	
	private global::Gtk.Action ViewAction;
	
	private global::Gtk.Action HelpAction;
	
	private global::Gtk.Action aboutAction;
	
	private global::Gtk.Action saveAction;
	
	private global::Gtk.ToggleAction iconsAction;
	
	private global::Gtk.Action exportAsAction;
	
	private global::Gtk.Action exportAsRRAction;
	
	private global::Gtk.Action plotExternalAction;
	
	private global::Gtk.Action checksumWindowAction;
	
	private global::Gtk.Action statisticsWindowAction;
	
	private global::Gtk.Action PlotAction;
	
	private global::Gtk.Action createSVGFileAction;
	
	private global::Gtk.Action visualizationAction;
	
	private global::Gtk.Action DataAction;
	
	private global::Gtk.Action exportTableAsCSVAction;
	
	private global::Gtk.VBox vbox1;
	
	private global::Gtk.MenuBar menubar1;
	
	private global::Gtk.Notebook notebook1;
	
	private global::Gtk.VPaned vpaned2D;
	
	private global::Gtk.ScrolledWindow GtkScrolledWindowTV2D;
	
	private global::Gtk.TreeView treeview2D;
	
	private global::Gtk.HPaned hpaned2D;
	
	private global::Gtk.ScrolledWindow scrolledwindowTable2D;
	
	private global::Gtk.Label label1;
	
	private global::Gtk.VPaned vpaned3D;
	
	private global::Gtk.ScrolledWindow ScrolledWindowTV3D;
	
	private global::Gtk.TreeView treeview3D;
	
	private global::Gtk.ScrolledWindow scrolledwindowTable3D;
	
	private global::Gtk.Label label2;
	
	private global::Gtk.Statusbar statusbar1;
	
	private global::Gtk.ProgressBar progressbar1;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("_File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_File");
		w1.Add (this.FileAction, null);
		this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("_Open"), null, "gtk-open");
		this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Open");
		w1.Add (this.openAction, null);
		this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("_Quit"), null, "gtk-quit");
		this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Quit");
		w1.Add (this.quitAction, null);
		this.ViewAction = new global::Gtk.Action ("ViewAction", global::Mono.Unix.Catalog.GetString ("_View"), null, null);
		this.ViewAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_View");
		w1.Add (this.ViewAction, null);
		this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("_Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Help");
		w1.Add (this.HelpAction, null);
		this.aboutAction = new global::Gtk.Action ("aboutAction", global::Mono.Unix.Catalog.GetString ("_About"), null, "gtk-about");
		this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_About");
		w1.Add (this.aboutAction, null);
		this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("_Save XML"), null, "gtk-save");
		this.saveAction.Sensitive = false;
		this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Save XML");
		w1.Add (this.saveAction, null);
		this.iconsAction = new global::Gtk.ToggleAction ("iconsAction", global::Mono.Unix.Catalog.GetString ("Icons"), null, null);
		this.iconsAction.Sensitive = false;
		this.iconsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Icons");
		w1.Add (this.iconsAction, "<Control>i");
		this.exportAsAction = new global::Gtk.Action ("exportAsAction", global::Mono.Unix.Catalog.GetString ("_Export As"), null, null);
		this.exportAsAction.Sensitive = false;
		this.exportAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Export As");
		w1.Add (this.exportAsAction, null);
		this.exportAsRRAction = new global::Gtk.Action ("exportAsRRAction", global::Mono.Unix.Catalog.GetString ("RomRaider Def XML"), null, "gtk-save-as");
		this.exportAsRRAction.Sensitive = false;
		this.exportAsRRAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("RomRaider Def XML");
		w1.Add (this.exportAsRRAction, null);
		this.plotExternalAction = new global::Gtk.Action ("plotExternalAction", global::Mono.Unix.Catalog.GetString ("_Plot External (gnuplot)"), null, null);
		this.plotExternalAction.Sensitive = false;
		this.plotExternalAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Plot");
		w1.Add (this.plotExternalAction, "<Control>p");
		this.checksumWindowAction = new global::Gtk.Action ("checksumWindowAction", global::Mono.Unix.Catalog.GetString ("Checksum Window"), null, null);
		this.checksumWindowAction.Sensitive = false;
		this.checksumWindowAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Checksum Window");
		w1.Add (this.checksumWindowAction, null);
		this.statisticsWindowAction = new global::Gtk.Action ("statisticsWindowAction", global::Mono.Unix.Catalog.GetString ("Statistics Window"), null, null);
		this.statisticsWindowAction.Sensitive = false;
		this.statisticsWindowAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Statistics Window");
		w1.Add (this.statisticsWindowAction, null);
		this.PlotAction = new global::Gtk.Action ("PlotAction", global::Mono.Unix.Catalog.GetString ("_Plot"), null, null);
		this.PlotAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Plot");
		w1.Add (this.PlotAction, null);
		this.createSVGFileAction = new global::Gtk.Action ("createSVGFileAction", global::Mono.Unix.Catalog.GetString ("Create SVG File"), null, null);
		this.createSVGFileAction.Sensitive = false;
		this.createSVGFileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Create SVG File");
		w1.Add (this.createSVGFileAction, null);
		this.visualizationAction = new global::Gtk.Action ("visualizationAction", global::Mono.Unix.Catalog.GetString ("Visualization"), null, "gtk-refresh");
		this.visualizationAction.Sensitive = false;
		this.visualizationAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Visualization");
		w1.Add (this.visualizationAction, "<Control>space");
		this.DataAction = new global::Gtk.Action ("DataAction", global::Mono.Unix.Catalog.GetString ("_Data"), null, null);
		this.DataAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Data");
		w1.Add (this.DataAction, null);
		this.exportTableAsCSVAction = new global::Gtk.Action ("exportTableAsCSVAction", global::Mono.Unix.Catalog.GetString ("Export Table as CSV"), null, null);
		this.exportTableAsCSVAction.Sensitive = false;
		this.exportTableAsCSVAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Export Table as CSV");
		w1.Add (this.exportTableAsCSVAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("ScoobyRom");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='openAction' action='openAction'/><menuitem name='saveAction' action='saveAction'/><separator/><menu name='exportAsAction' action='exportAsAction'><menuitem name='exportAsRRAction' action='exportAsRRAction'/></menu><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='ViewAction' action='ViewAction'><menuitem name='visualizationAction' action='visualizationAction'/><menuitem name='iconsAction' action='iconsAction'/><menuitem name='checksumWindowAction' action='checksumWindowAction'/><menuitem name='statisticsWindowAction' action='statisticsWindowAction'/></menu><menu name='PlotAction' action='PlotAction'><menuitem name='plotExternalAction' action='plotExternalAction'/><menuitem name='createSVGFileAction' action='createSVGFileAction'/></menu><menu name='DataAction' action='DataAction'><menuitem name='exportTableAsCSVAction' action='exportTableAsCSVAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.notebook1 = new global::Gtk.Notebook ();
		this.notebook1.CanFocus = true;
		this.notebook1.Name = "notebook1";
		this.notebook1.CurrentPage = 1;
		// Container child notebook1.Gtk.Notebook+NotebookChild
		this.vpaned2D = new global::Gtk.VPaned ();
		this.vpaned2D.CanFocus = true;
		this.vpaned2D.Name = "vpaned2D";
		this.vpaned2D.Position = 250;
		// Container child vpaned2D.Gtk.Paned+PanedChild
		this.GtkScrolledWindowTV2D = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowTV2D.Name = "GtkScrolledWindowTV2D";
		this.GtkScrolledWindowTV2D.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowTV2D.Gtk.Container+ContainerChild
		this.treeview2D = new global::Gtk.TreeView ();
		this.treeview2D.CanFocus = true;
		this.treeview2D.Name = "treeview2D";
		this.GtkScrolledWindowTV2D.Add (this.treeview2D);
		this.vpaned2D.Add (this.GtkScrolledWindowTV2D);
		global::Gtk.Paned.PanedChild w4 = ((global::Gtk.Paned.PanedChild)(this.vpaned2D [this.GtkScrolledWindowTV2D]));
		w4.Resize = false;
		w4.Shrink = false;
		// Container child vpaned2D.Gtk.Paned+PanedChild
		this.hpaned2D = new global::Gtk.HPaned ();
		this.hpaned2D.CanFocus = true;
		this.hpaned2D.Name = "hpaned2D";
		this.hpaned2D.Position = 180;
		// Container child hpaned2D.Gtk.Paned+PanedChild
		this.scrolledwindowTable2D = new global::Gtk.ScrolledWindow ();
		this.scrolledwindowTable2D.CanFocus = true;
		this.scrolledwindowTable2D.Name = "scrolledwindowTable2D";
		this.scrolledwindowTable2D.ShadowType = ((global::Gtk.ShadowType)(1));
		this.hpaned2D.Add (this.scrolledwindowTable2D);
		global::Gtk.Paned.PanedChild w5 = ((global::Gtk.Paned.PanedChild)(this.hpaned2D [this.scrolledwindowTable2D]));
		w5.Resize = false;
		this.vpaned2D.Add (this.hpaned2D);
		global::Gtk.Paned.PanedChild w6 = ((global::Gtk.Paned.PanedChild)(this.vpaned2D [this.hpaned2D]));
		w6.Resize = false;
		w6.Shrink = false;
		this.notebook1.Add (this.vpaned2D);
		// Notebook tab
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("2D Tables");
		this.notebook1.SetTabLabel (this.vpaned2D, this.label1);
		this.label1.ShowAll ();
		// Container child notebook1.Gtk.Notebook+NotebookChild
		this.vpaned3D = new global::Gtk.VPaned ();
		this.vpaned3D.CanFocus = true;
		this.vpaned3D.Name = "vpaned3D";
		this.vpaned3D.Position = 250;
		// Container child vpaned3D.Gtk.Paned+PanedChild
		this.ScrolledWindowTV3D = new global::Gtk.ScrolledWindow ();
		this.ScrolledWindowTV3D.Name = "ScrolledWindowTV3D";
		this.ScrolledWindowTV3D.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child ScrolledWindowTV3D.Gtk.Container+ContainerChild
		this.treeview3D = new global::Gtk.TreeView ();
		this.treeview3D.CanFocus = true;
		this.treeview3D.Name = "treeview3D";
		this.ScrolledWindowTV3D.Add (this.treeview3D);
		this.vpaned3D.Add (this.ScrolledWindowTV3D);
		global::Gtk.Paned.PanedChild w9 = ((global::Gtk.Paned.PanedChild)(this.vpaned3D [this.ScrolledWindowTV3D]));
		w9.Resize = false;
		w9.Shrink = false;
		// Container child vpaned3D.Gtk.Paned+PanedChild
		this.scrolledwindowTable3D = new global::Gtk.ScrolledWindow ();
		this.scrolledwindowTable3D.CanFocus = true;
		this.scrolledwindowTable3D.Name = "scrolledwindowTable3D";
		this.scrolledwindowTable3D.ShadowType = ((global::Gtk.ShadowType)(1));
		this.vpaned3D.Add (this.scrolledwindowTable3D);
		global::Gtk.Paned.PanedChild w10 = ((global::Gtk.Paned.PanedChild)(this.vpaned3D [this.scrolledwindowTable3D]));
		w10.Resize = false;
		w10.Shrink = false;
		this.notebook1.Add (this.vpaned3D);
		global::Gtk.Notebook.NotebookChild w11 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vpaned3D]));
		w11.Position = 1;
		// Notebook tab
		this.label2 = new global::Gtk.Label ();
		this.label2.Name = "label2";
		this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("3D Tables");
		this.notebook1.SetTabLabel (this.vpaned3D, this.label2);
		this.label2.ShowAll ();
		this.vbox1.Add (this.notebook1);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.notebook1]));
		w12.Position = 1;
		// Container child vbox1.Gtk.Box+BoxChild
		this.statusbar1 = new global::Gtk.Statusbar ();
		this.statusbar1.Name = "statusbar1";
		this.statusbar1.Spacing = 6;
		// Container child statusbar1.Gtk.Box+BoxChild
		this.progressbar1 = new global::Gtk.ProgressBar ();
		this.progressbar1.Name = "progressbar1";
		this.statusbar1.Add (this.progressbar1);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.statusbar1 [this.progressbar1]));
		w13.Position = 2;
		this.vbox1.Add (this.statusbar1);
		global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.statusbar1]));
		w14.PackType = ((global::Gtk.PackType)(1));
		w14.Position = 2;
		w14.Expand = false;
		w14.Fill = false;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 938;
		this.DefaultHeight = 702;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
		this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.aboutAction.Activated += new global::System.EventHandler (this.OnAbout);
		this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
		this.iconsAction.Activated += new global::System.EventHandler (this.OnIconsActionActivated);
		this.exportAsRRAction.Activated += new global::System.EventHandler (this.OnExportAsRRActionActivated);
		this.plotExternalAction.Activated += new global::System.EventHandler (this.OnPlotActionActivated);
		this.checksumWindowAction.Activated += new global::System.EventHandler (this.OnROMChecksumsActionActivated);
		this.statisticsWindowAction.Activated += new global::System.EventHandler (this.OnStatisticsWindowActionActivated);
		this.createSVGFileAction.Activated += new global::System.EventHandler (this.OnCreateSVGFileActionActivated);
		this.visualizationAction.Activated += new global::System.EventHandler (this.OnVisualizationAction);
		this.exportTableAsCSVAction.Activated += new global::System.EventHandler (this.OnExportTableAsCSVActionActivated);
		this.notebook1.SwitchPage += new global::Gtk.SwitchPageHandler (this.OnNotebook1SwitchPage);
	}
}
